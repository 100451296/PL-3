
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVISIONAND ASSIGN BINARY BOOLEAN CHARACTER CHARACTER_VALUE CLOSE_BRACE CLOSE_PAREN CLOSE_SQUARE COLON COMMA COMMENT DIVISION DOT ELSE EQUAL FALSE FLOAT FLOAT_TYPE FUNCTION GRATER GRATER_EQUAL HEX IF INTEGER INT_TYPE LET LOWER LOWER_EQUAL MINUS MULTIPLY NOT NULL OCTAL OPEN_BRACE OPEN_PAREN OPEN_SQUARE OR PLUS QUOTED_STRING RETURN SCIENTIFIC SEMICOLON STRING TRUE TYPE WHILE\n    program : statementList\n    \n    statementList : statement \n                  | statementList statement\n    \n    statement : instruction\n              | COMMENT\n              | conditional\n              | loop\n              | function_definition\n    \n    conditional : IF OPEN_PAREN expression CLOSE_PAREN OPEN_BRACE statementList CLOSE_BRACE\n                | IF OPEN_PAREN expression CLOSE_PAREN OPEN_BRACE statementList CLOSE_BRACE ELSE OPEN_BRACE statementList CLOSE_BRACE\n    \n    loop : WHILE OPEN_PAREN expression CLOSE_PAREN OPEN_BRACE statementList CLOSE_BRACE\n    \n    function_definition : FUNCTION STRING OPEN_PAREN args_list CLOSE_PAREN COLON type OPEN_BRACE statementList RETURN value SEMICOLON CLOSE_BRACE\n    \n    args_list : STRING COLON type\n              | STRING COLON type COMMA args_list\n    \n    instruction : declaration SEMICOLON\n                | asignation SEMICOLON\n                | property_asignation SEMICOLON\n    \n    property_asignation : STRING properties ASSIGN value\n    \n    declaration : LET declaration_identifier\n                | LET asignation\n                | TYPE STRING ASSIGN type_object\n    \n    declaration_identifier : STRING \n                           | STRING COMMA declaration_identifier\n                           | STRING COLON STRING\n                           | STRING COLON STRING COMMA declaration_identifier\n    \n    identifiers : STRING \n                | STRING COMMA identifiers\n    \n    asignation : identifiers ASSIGN value\n               | object_identifiers ASSIGN object\n    \n    object_identifiers : STRING COLON STRING\n                       | STRING COLON STRING COMMA object_identifiers\n    \n    object : OPEN_BRACE pairs CLOSE_BRACE\n           | OPEN_BRACE CLOSE_BRACE\n    \n    pairs : pair COMMA pairs\n          | pair\n          | pair COMMA\n    \n    pair : key COLON value\n    \n    type_object : OPEN_BRACE type_pairs CLOSE_BRACE\n           | OPEN_BRACE CLOSE_BRACE\n    \n    type_pairs : type_pair COMMA type_pairs\n                | type_pair\n                | type_pair COMMA\n    \n    type_pair : key COLON type\n    \n    key : QUOTED_STRING\n        | STRING\n    \n    type : CHARACTER\n        | INT_TYPE\n        | FLOAT_TYPE\n        | BOOLEAN\n    \n    properties : dot_property\n               | square_property\n               | dot_property properties\n               | square_property properties\n    \n    dot_property : DOT STRING\n    \n    square_property : OPEN_SQUARE QUOTED_STRING CLOSE_SQUARE\n    \n    value : CHARACTER_VALUE\n            | INTEGER\n            | FLOAT\n            | HEX\n            | SCIENTIFIC\n            | OCTAL\n            | BINARY\n            | NULL\n            | TRUE\n            | FALSE\n            | expression_arith\n            | expression_comp\n            | NOT OPEN_PAREN expression_comp CLOSE_PAREN\n            | expression_logic\n            | NOT logic_element\n            | object\n            | STRING properties\n            | STRING\n    \n    expression : expression_logic\n               | logic_element\n    \n    expression_logic : logic_element logic_operator logic_element\n                     | logic_element logic_operator logic_element logic_operations\n    \n    logic_operator : AND\n                    | OR\n    \n    logic_operations : logic_operation\n                    | logic_operation logic_operations\n    \n    logic_operation : logic_operator logic_element\n    \n    expression_comp : comp_element comp_operator comp_element\n    \n    comp_operator : EQUAL\n                  | GRATER\n                  | GRATER_EQUAL\n                  | LOWER\n                  | LOWER_EQUAL\n\n    \n    expression_arith : element operations\n    \n    operations : operation \n               | operation operations\n    \n    operation : arithmetic_operator element\n    \n    arithmetic_operator : PLUS\n                        | MINUS\n                        | MULTIPLY\n                        | DIVISION\n    \n    element : INTEGER\n           | FLOAT\n           | HEX\n           | SCIENTIFIC\n           | OCTAL\n           | BINARY\n           | STRING\n           | OPEN_PAREN expression_arith CLOSE_PAREN\n           | STRING properties\n           | CHARACTER_VALUE\n    \n    comp_element : INTEGER\n           | FLOAT\n           | HEX\n           | SCIENTIFIC\n           | OCTAL\n           | BINARY\n           | STRING\n           | expression_arith\n           | OPEN_PAREN expression_arith CLOSE_PAREN\n           | STRING properties\n           | CHARACTER_VALUE\n    \n    logic_element : TRUE\n            | FALSE\n            | expression_comp\n            | NOT OPEN_PAREN expression_comp CLOSE_PAREN\n            | OPEN_PAREN expression_logic CLOSE_PAREN\n            | STRING\n            | NOT logic_element\n    '
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,6,7,8,20,21,22,23,150,169,185,193,209,213,222,224,225,226,228,231,],[5,5,-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,5,5,5,5,-9,-11,5,5,5,5,-10,-12,]),'IF':([0,2,3,4,5,6,7,8,20,21,22,23,150,169,185,193,209,213,222,224,225,226,228,231,],[12,12,-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,12,12,12,12,-9,-11,12,12,12,12,-10,-12,]),'WHILE':([0,2,3,4,5,6,7,8,20,21,22,23,150,169,185,193,209,213,222,224,225,226,228,231,],[13,13,-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,13,13,13,13,-9,-11,13,13,13,13,-10,-12,]),'FUNCTION':([0,2,3,4,5,6,7,8,20,21,22,23,150,169,185,193,209,213,222,224,225,226,228,231,],[14,14,-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,14,14,14,14,-9,-11,14,14,14,14,-10,-12,]),'LET':([0,2,3,4,5,6,7,8,20,21,22,23,150,169,185,193,209,213,222,224,225,226,228,231,],[16,16,-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,16,16,16,16,-9,-11,16,16,16,16,-10,-12,]),'TYPE':([0,2,3,4,5,6,7,8,20,21,22,23,150,169,185,193,209,213,222,224,225,226,228,231,],[17,17,-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,17,17,17,17,-9,-11,17,17,17,17,-10,-12,]),'STRING':([0,2,3,4,5,6,7,8,14,16,17,20,21,22,23,24,25,28,29,32,38,40,47,60,61,69,70,85,86,91,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,128,134,135,137,150,152,157,167,169,174,175,183,184,185,186,193,204,209,213,214,216,217,222,224,225,226,227,228,231,],[15,15,-2,-4,-5,-6,-7,-8,26,36,37,-3,-15,-16,-17,48,48,62,64,67,90,96,48,125,90,130,132,48,139,146,96,48,-78,-79,154,156,-84,-85,-86,-87,-88,166,-93,-94,-95,-96,172,146,154,139,15,139,166,166,15,200,201,146,90,15,48,15,146,-9,-11,125,223,223,15,15,15,15,90,-10,-12,]),'$end':([1,2,3,4,5,6,7,8,20,21,22,23,209,213,228,231,],[0,-1,-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,-9,-11,-10,-12,]),'CLOSE_BRACE':([3,4,5,6,7,8,20,21,22,23,30,31,44,45,46,48,50,51,52,53,54,55,56,57,65,66,67,73,74,75,76,77,78,79,80,81,82,83,84,87,89,90,91,109,110,117,118,129,134,136,140,141,142,143,147,148,151,155,156,158,159,160,161,162,163,164,165,166,168,176,178,182,183,185,187,188,189,191,193,195,196,197,198,204,206,207,208,209,210,211,212,213,218,219,226,228,230,231,],[-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,-50,-51,-118,-119,-120,-123,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-71,-73,142,-124,-116,-89,-90,-55,177,-70,-72,182,-33,-35,-122,-115,-76,-83,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,203,-41,-32,-36,209,-77,-80,-121,-105,213,-46,-47,-48,-49,-42,-68,-34,-37,-9,-82,-81,-104,-11,-40,-43,228,-10,231,-12,]),'RETURN':([3,4,5,6,7,8,20,21,22,23,209,213,225,228,231,],[-2,-4,-5,-6,-7,-8,-3,-15,-16,-17,-9,-11,227,-10,-12,]),'SEMICOLON':([9,10,11,30,31,34,35,36,44,45,46,48,50,51,52,53,54,55,56,57,65,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,90,92,109,110,117,118,127,129,130,131,132,133,136,140,142,147,148,151,155,156,158,159,160,161,162,163,164,165,166,168,177,182,187,188,189,191,200,201,202,203,206,210,211,212,223,229,],[21,22,23,-50,-51,-19,-20,-22,-118,-119,-120,-123,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-28,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-71,-73,-29,-124,-116,-89,-90,-18,-55,-22,-23,-24,-21,-70,-72,-33,-122,-115,-76,-83,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,-39,-32,-77,-80,-121,-105,-24,-22,-25,-38,-68,-82,-81,-104,-22,230,]),'OPEN_PAREN':([12,13,24,25,26,38,40,47,61,85,86,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,135,137,152,157,167,184,186,227,],[24,25,40,40,60,86,93,108,86,135,137,93,40,-78,-79,152,157,-84,-85,-86,-87,-88,167,-93,-94,-95,-96,152,137,137,167,167,86,40,86,]),'ASSIGN':([15,18,19,27,30,31,36,37,62,63,64,65,66,67,129,130,132,173,],[-26,38,39,61,-50,-51,-26,71,-26,-27,-30,-52,-53,-54,-55,-26,-30,-31,]),'COMMA':([15,30,31,36,44,45,46,48,50,51,52,53,54,55,56,57,62,64,65,66,67,73,74,75,76,77,78,79,80,81,82,83,84,87,89,90,109,110,117,118,129,130,132,136,140,142,143,147,148,151,155,156,158,159,160,161,162,163,164,165,166,168,178,182,187,188,189,191,194,195,196,197,198,200,201,206,208,210,211,212,219,223,],[28,-50,-51,69,-118,-119,-120,-123,-107,-108,-109,-110,-111,-112,-114,-117,28,128,-52,-53,-54,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-71,-73,-124,-116,-89,-90,-55,69,175,-70,-72,-33,183,-122,-115,-76,-83,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,204,-32,-77,-80,-121,-105,214,-46,-47,-48,-49,216,217,-68,-37,-82,-81,-104,-43,217,]),'COLON':([15,36,125,130,144,145,146,171,172,179,201,223,],[29,70,170,174,184,-44,-45,199,29,205,70,174,]),'DOT':([15,30,31,48,67,90,96,129,139,154,156,166,],[32,32,32,32,-54,32,32,-55,32,32,32,32,]),'OPEN_SQUARE':([15,30,31,48,67,90,96,129,139,154,156,166,],[33,33,33,33,-54,33,33,-55,33,33,33,33,]),'TRUE':([24,25,38,40,47,61,85,86,93,105,106,107,108,135,137,152,184,186,227,],[44,44,81,44,44,81,44,44,44,44,-78,-79,44,44,44,44,81,44,81,]),'FALSE':([24,25,38,40,47,61,85,86,93,105,106,107,108,135,137,152,184,186,227,],[45,45,82,45,45,82,45,45,45,45,-78,-79,45,45,45,45,82,45,82,]),'NOT':([24,25,38,40,47,61,85,86,93,105,106,107,108,135,137,152,184,186,227,],[47,47,85,47,47,85,47,47,47,47,-78,-79,47,47,47,47,85,47,85,]),'INTEGER':([24,25,38,40,47,61,85,86,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,135,137,152,157,167,184,186,227,],[50,50,74,97,50,74,50,97,97,50,-78,-79,50,50,-84,-85,-86,-87,-88,160,-93,-94,-95,-96,50,97,97,160,160,74,50,74,]),'FLOAT':([24,25,38,40,47,61,85,86,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,135,137,152,157,167,184,186,227,],[51,51,75,98,51,75,51,98,98,51,-78,-79,51,51,-84,-85,-86,-87,-88,161,-93,-94,-95,-96,51,98,98,161,161,75,51,75,]),'HEX':([24,25,38,40,47,61,85,86,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,135,137,152,157,167,184,186,227,],[52,52,76,99,52,76,52,99,99,52,-78,-79,52,52,-84,-85,-86,-87,-88,162,-93,-94,-95,-96,52,99,99,162,162,76,52,76,]),'SCIENTIFIC':([24,25,38,40,47,61,85,86,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,135,137,152,157,167,184,186,227,],[53,53,77,100,53,77,53,100,100,53,-78,-79,53,53,-84,-85,-86,-87,-88,163,-93,-94,-95,-96,53,100,100,163,163,77,53,77,]),'OCTAL':([24,25,38,40,47,61,85,86,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,135,137,152,157,167,184,186,227,],[54,54,78,101,54,78,54,101,101,54,-78,-79,54,54,-84,-85,-86,-87,-88,164,-93,-94,-95,-96,54,101,101,164,164,78,54,78,]),'BINARY':([24,25,38,40,47,61,85,86,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,135,137,152,157,167,184,186,227,],[55,55,79,102,55,79,55,102,102,55,-78,-79,55,55,-84,-85,-86,-87,-88,165,-93,-94,-95,-96,55,102,102,165,165,79,55,79,]),'CHARACTER_VALUE':([24,25,38,40,47,61,85,86,93,105,106,107,108,111,112,113,114,115,116,119,120,121,122,123,135,137,152,157,167,184,186,227,],[57,57,73,103,57,73,57,103,103,57,-78,-79,57,57,-84,-85,-86,-87,-88,168,-93,-94,-95,-96,57,103,103,168,168,73,57,73,]),'EQUAL':([30,31,48,49,50,51,52,53,54,55,56,57,65,66,67,73,74,75,76,77,78,79,83,90,95,96,97,98,99,100,101,102,103,110,117,118,129,138,139,140,148,149,154,158,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-113,112,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-117,-107,-108,-109,-110,-111,-112,-114,-113,-114,-113,-107,-108,-109,-110,-111,-112,-117,-116,-89,-90,-55,-114,-113,-116,-115,-116,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,-115,-105,-104,]),'GRATER':([30,31,48,49,50,51,52,53,54,55,56,57,65,66,67,73,74,75,76,77,78,79,83,90,95,96,97,98,99,100,101,102,103,110,117,118,129,138,139,140,148,149,154,158,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-113,113,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-117,-107,-108,-109,-110,-111,-112,-114,-113,-114,-113,-107,-108,-109,-110,-111,-112,-117,-116,-89,-90,-55,-114,-113,-116,-115,-116,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,-115,-105,-104,]),'GRATER_EQUAL':([30,31,48,49,50,51,52,53,54,55,56,57,65,66,67,73,74,75,76,77,78,79,83,90,95,96,97,98,99,100,101,102,103,110,117,118,129,138,139,140,148,149,154,158,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-113,114,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-117,-107,-108,-109,-110,-111,-112,-114,-113,-114,-113,-107,-108,-109,-110,-111,-112,-117,-116,-89,-90,-55,-114,-113,-116,-115,-116,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,-115,-105,-104,]),'LOWER':([30,31,48,49,50,51,52,53,54,55,56,57,65,66,67,73,74,75,76,77,78,79,83,90,95,96,97,98,99,100,101,102,103,110,117,118,129,138,139,140,148,149,154,158,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-113,115,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-117,-107,-108,-109,-110,-111,-112,-114,-113,-114,-113,-107,-108,-109,-110,-111,-112,-117,-116,-89,-90,-55,-114,-113,-116,-115,-116,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,-115,-105,-104,]),'LOWER_EQUAL':([30,31,48,49,50,51,52,53,54,55,56,57,65,66,67,73,74,75,76,77,78,79,83,90,95,96,97,98,99,100,101,102,103,110,117,118,129,138,139,140,148,149,154,158,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-113,116,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-117,-107,-108,-109,-110,-111,-112,-114,-113,-114,-113,-107,-108,-109,-110,-111,-112,-117,-116,-89,-90,-55,-114,-113,-116,-115,-116,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,-115,-105,-104,]),'PLUS':([30,31,48,50,51,52,53,54,55,57,58,65,66,67,73,74,75,76,77,78,79,90,96,97,98,99,100,101,102,103,110,118,129,139,140,148,149,154,156,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-103,-97,-98,-99,-100,-101,-102,-106,120,-52,-53,-54,-106,-97,-98,-99,-100,-101,-102,-103,-103,-97,-98,-99,-100,-101,-102,-106,-105,120,-55,-103,-105,-104,-105,-103,-103,-92,-97,-98,-99,-100,-101,-102,-103,-106,-104,-105,-104,]),'MINUS':([30,31,48,50,51,52,53,54,55,57,58,65,66,67,73,74,75,76,77,78,79,90,96,97,98,99,100,101,102,103,110,118,129,139,140,148,149,154,156,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-103,-97,-98,-99,-100,-101,-102,-106,121,-52,-53,-54,-106,-97,-98,-99,-100,-101,-102,-103,-103,-97,-98,-99,-100,-101,-102,-106,-105,121,-55,-103,-105,-104,-105,-103,-103,-92,-97,-98,-99,-100,-101,-102,-103,-106,-104,-105,-104,]),'MULTIPLY':([30,31,48,50,51,52,53,54,55,57,58,65,66,67,73,74,75,76,77,78,79,90,96,97,98,99,100,101,102,103,110,118,129,139,140,148,149,154,156,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-103,-97,-98,-99,-100,-101,-102,-106,122,-52,-53,-54,-106,-97,-98,-99,-100,-101,-102,-103,-103,-97,-98,-99,-100,-101,-102,-106,-105,122,-55,-103,-105,-104,-105,-103,-103,-92,-97,-98,-99,-100,-101,-102,-103,-106,-104,-105,-104,]),'DIVISION':([30,31,48,50,51,52,53,54,55,57,58,65,66,67,73,74,75,76,77,78,79,90,96,97,98,99,100,101,102,103,110,118,129,139,140,148,149,154,156,159,160,161,162,163,164,165,166,168,181,191,212,],[-50,-51,-103,-97,-98,-99,-100,-101,-102,-106,123,-52,-53,-54,-106,-97,-98,-99,-100,-101,-102,-103,-103,-97,-98,-99,-100,-101,-102,-106,-105,123,-55,-103,-105,-104,-105,-103,-103,-92,-97,-98,-99,-100,-101,-102,-103,-106,-104,-105,-104,]),'AND':([30,31,43,44,45,46,48,50,51,52,53,54,55,56,57,65,66,67,81,82,84,88,90,96,109,110,117,118,129,136,139,147,148,151,153,154,155,156,158,159,160,161,162,163,164,165,166,168,180,188,189,191,206,210,212,],[-50,-51,106,-118,-119,-120,-123,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-118,-119,-120,106,-123,-123,-124,-116,-89,-90,-55,-124,-123,-122,-115,106,-120,-123,-83,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,-120,106,-121,-105,-121,-82,-104,]),'OR':([30,31,43,44,45,46,48,50,51,52,53,54,55,56,57,65,66,67,81,82,84,88,90,96,109,110,117,118,129,136,139,147,148,151,153,154,155,156,158,159,160,161,162,163,164,165,166,168,180,188,189,191,206,210,212,],[-50,-51,107,-118,-119,-120,-123,-107,-108,-109,-110,-111,-112,-114,-117,-52,-53,-54,-118,-119,-120,107,-123,-123,-124,-116,-89,-90,-55,-124,-123,-122,-115,107,-120,-123,-83,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,-120,107,-121,-105,-121,-82,-104,]),'CLOSE_PAREN':([30,31,41,42,43,44,45,46,48,50,51,52,53,54,55,56,57,59,65,66,67,94,95,109,110,117,118,126,129,138,147,148,151,153,155,156,158,159,160,161,162,163,164,165,166,168,180,187,188,189,190,191,192,194,195,196,197,198,210,211,212,221,],[-50,-51,104,-74,-75,-118,-119,-120,-123,-107,-108,-109,-110,-111,-112,-114,-117,124,-52,-53,-54,147,148,-124,-116,-89,-90,171,-55,181,-122,-115,-76,189,-83,-113,-91,-92,-97,-98,-99,-100,-101,-102,-103,-106,206,-77,-80,-121,148,-105,212,-13,-46,-47,-48,-49,-82,-81,-104,-14,]),'QUOTED_STRING':([33,91,134,183,204,],[68,145,145,145,145,]),'NULL':([38,61,184,227,],[80,80,80,80,]),'OPEN_BRACE':([38,39,61,71,104,124,184,195,196,197,198,215,220,227,],[91,91,91,134,150,169,91,-46,-47,-48,-49,222,224,91,]),'CLOSE_SQUARE':([68,],[129,]),'CHARACTER':([170,199,205,],[195,195,195,]),'INT_TYPE':([170,199,205,],[196,196,196,]),'FLOAT_TYPE':([170,199,205,],[197,197,197,]),'BOOLEAN':([170,199,205,],[198,198,198,]),'ELSE':([209,],[220,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statementList':([0,150,169,222,224,],[2,185,193,225,226,]),'statement':([0,2,150,169,185,193,222,224,225,226,],[3,20,3,3,20,20,3,3,20,20,]),'instruction':([0,2,150,169,185,193,222,224,225,226,],[4,4,4,4,4,4,4,4,4,4,]),'conditional':([0,2,150,169,185,193,222,224,225,226,],[6,6,6,6,6,6,6,6,6,6,]),'loop':([0,2,150,169,185,193,222,224,225,226,],[7,7,7,7,7,7,7,7,7,7,]),'function_definition':([0,2,150,169,185,193,222,224,225,226,],[8,8,8,8,8,8,8,8,8,8,]),'declaration':([0,2,150,169,185,193,222,224,225,226,],[9,9,9,9,9,9,9,9,9,9,]),'asignation':([0,2,16,150,169,185,193,222,224,225,226,],[10,10,35,10,10,10,10,10,10,10,10,]),'property_asignation':([0,2,150,169,185,193,222,224,225,226,],[11,11,11,11,11,11,11,11,11,11,]),'identifiers':([0,2,16,28,69,150,169,185,193,222,224,225,226,],[18,18,18,63,63,18,18,18,18,18,18,18,18,]),'object_identifiers':([0,2,16,128,150,169,175,185,193,222,224,225,226,],[19,19,19,173,19,19,173,19,19,19,19,19,19,]),'properties':([15,30,31,48,90,96,139,154,156,166,],[27,65,66,110,140,149,149,110,110,191,]),'dot_property':([15,30,31,48,90,96,139,154,156,166,],[30,30,30,30,30,30,30,30,30,30,]),'square_property':([15,30,31,48,90,96,139,154,156,166,],[31,31,31,31,31,31,31,31,31,31,]),'declaration_identifier':([16,69,175,216,217,],[34,131,202,202,131,]),'expression':([24,25,],[41,59,]),'expression_logic':([24,25,38,40,61,86,93,108,135,137,152,184,227,],[42,42,87,94,87,94,94,94,94,94,94,87,87,]),'logic_element':([24,25,38,40,47,61,85,86,93,105,108,135,137,152,184,186,227,],[43,43,88,88,109,88,136,88,88,151,88,88,88,88,88,210,88,]),'expression_comp':([24,25,38,40,47,61,85,86,93,105,108,135,137,152,184,186,227,],[46,46,84,46,46,84,46,46,46,46,153,180,46,46,84,46,84,]),'comp_element':([24,25,38,40,47,61,85,86,93,105,108,111,135,137,152,184,186,227,],[49,49,49,49,49,49,49,49,49,49,49,155,49,49,49,49,49,49,]),'expression_arith':([24,25,38,40,47,61,85,86,93,105,108,111,135,137,152,157,167,184,186,227,],[56,56,83,95,56,83,56,138,138,56,95,56,95,138,95,190,192,83,56,83,]),'element':([24,25,38,40,47,61,85,86,93,105,108,111,119,135,137,152,157,167,184,186,227,],[58,58,58,58,58,58,58,58,58,58,58,58,159,58,58,58,58,58,58,58,58,]),'value':([38,61,184,227,],[72,127,208,229,]),'object':([38,39,61,184,227,],[89,92,89,89,89,]),'logic_operator':([43,88,151,188,],[105,105,186,186,]),'comp_operator':([49,],[111,]),'operations':([58,118,],[117,158,]),'operation':([58,118,],[118,118,]),'arithmetic_operator':([58,118,],[119,119,]),'args_list':([60,214,],[126,221,]),'type_object':([71,],[133,]),'pairs':([91,183,],[141,207,]),'pair':([91,183,],[143,143,]),'key':([91,134,183,204,],[144,179,144,179,]),'type_pairs':([134,204,],[176,218,]),'type_pair':([134,204,],[178,178,]),'logic_operations':([151,188,],[187,211,]),'logic_operation':([151,188,],[188,188,]),'type':([170,199,205,],[194,215,219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statementList','program',1,'p_program','ajs_parser.py',14),
  ('statementList -> statement','statementList',1,'p_statementList','ajs_parser.py',20),
  ('statementList -> statementList statement','statementList',2,'p_statementList','ajs_parser.py',21),
  ('statement -> instruction','statement',1,'p_statement','ajs_parser.py',27),
  ('statement -> COMMENT','statement',1,'p_statement','ajs_parser.py',28),
  ('statement -> conditional','statement',1,'p_statement','ajs_parser.py',29),
  ('statement -> loop','statement',1,'p_statement','ajs_parser.py',30),
  ('statement -> function_definition','statement',1,'p_statement','ajs_parser.py',31),
  ('conditional -> IF OPEN_PAREN expression CLOSE_PAREN OPEN_BRACE statementList CLOSE_BRACE','conditional',7,'p_conditional','ajs_parser.py',37),
  ('conditional -> IF OPEN_PAREN expression CLOSE_PAREN OPEN_BRACE statementList CLOSE_BRACE ELSE OPEN_BRACE statementList CLOSE_BRACE','conditional',11,'p_conditional','ajs_parser.py',38),
  ('loop -> WHILE OPEN_PAREN expression CLOSE_PAREN OPEN_BRACE statementList CLOSE_BRACE','loop',7,'p_loop','ajs_parser.py',44),
  ('function_definition -> FUNCTION STRING OPEN_PAREN args_list CLOSE_PAREN COLON type OPEN_BRACE statementList RETURN value SEMICOLON CLOSE_BRACE','function_definition',13,'p_function_definition','ajs_parser.py',50),
  ('args_list -> STRING COLON type','args_list',3,'p_args_list','ajs_parser.py',55),
  ('args_list -> STRING COLON type COMMA args_list','args_list',5,'p_args_list','ajs_parser.py',56),
  ('instruction -> declaration SEMICOLON','instruction',2,'p_instruction','ajs_parser.py',62),
  ('instruction -> asignation SEMICOLON','instruction',2,'p_instruction','ajs_parser.py',63),
  ('instruction -> property_asignation SEMICOLON','instruction',2,'p_instruction','ajs_parser.py',64),
  ('property_asignation -> STRING properties ASSIGN value','property_asignation',4,'p_property_asignation','ajs_parser.py',71),
  ('declaration -> LET declaration_identifier','declaration',2,'p_declaration','ajs_parser.py',77),
  ('declaration -> LET asignation','declaration',2,'p_declaration','ajs_parser.py',78),
  ('declaration -> TYPE STRING ASSIGN type_object','declaration',4,'p_declaration','ajs_parser.py',79),
  ('declaration_identifier -> STRING','declaration_identifier',1,'p_declaration_identifier','ajs_parser.py',85),
  ('declaration_identifier -> STRING COMMA declaration_identifier','declaration_identifier',3,'p_declaration_identifier','ajs_parser.py',86),
  ('declaration_identifier -> STRING COLON STRING','declaration_identifier',3,'p_declaration_identifier','ajs_parser.py',87),
  ('declaration_identifier -> STRING COLON STRING COMMA declaration_identifier','declaration_identifier',5,'p_declaration_identifier','ajs_parser.py',88),
  ('identifiers -> STRING','identifiers',1,'p_identifiers','ajs_parser.py',94),
  ('identifiers -> STRING COMMA identifiers','identifiers',3,'p_identifiers','ajs_parser.py',95),
  ('asignation -> identifiers ASSIGN value','asignation',3,'p_asignation','ajs_parser.py',101),
  ('asignation -> object_identifiers ASSIGN object','asignation',3,'p_asignation','ajs_parser.py',102),
  ('object_identifiers -> STRING COLON STRING','object_identifiers',3,'p_object_identifiers','ajs_parser.py',108),
  ('object_identifiers -> STRING COLON STRING COMMA object_identifiers','object_identifiers',5,'p_object_identifiers','ajs_parser.py',109),
  ('object -> OPEN_BRACE pairs CLOSE_BRACE','object',3,'p_object','ajs_parser.py',116),
  ('object -> OPEN_BRACE CLOSE_BRACE','object',2,'p_object','ajs_parser.py',117),
  ('pairs -> pair COMMA pairs','pairs',3,'p_pairs','ajs_parser.py',122),
  ('pairs -> pair','pairs',1,'p_pairs','ajs_parser.py',123),
  ('pairs -> pair COMMA','pairs',2,'p_pairs','ajs_parser.py',124),
  ('pair -> key COLON value','pair',3,'p_pair','ajs_parser.py',129),
  ('type_object -> OPEN_BRACE type_pairs CLOSE_BRACE','type_object',3,'p_type_object','ajs_parser.py',136),
  ('type_object -> OPEN_BRACE CLOSE_BRACE','type_object',2,'p_type_object','ajs_parser.py',137),
  ('type_pairs -> type_pair COMMA type_pairs','type_pairs',3,'p_type_pairs','ajs_parser.py',142),
  ('type_pairs -> type_pair','type_pairs',1,'p_type_pairs','ajs_parser.py',143),
  ('type_pairs -> type_pair COMMA','type_pairs',2,'p_type_pairs','ajs_parser.py',144),
  ('type_pair -> key COLON type','type_pair',3,'p_type_pair','ajs_parser.py',149),
  ('key -> QUOTED_STRING','key',1,'p_key','ajs_parser.py',155),
  ('key -> STRING','key',1,'p_key','ajs_parser.py',156),
  ('type -> CHARACTER','type',1,'p_type','ajs_parser.py',162),
  ('type -> INT_TYPE','type',1,'p_type','ajs_parser.py',163),
  ('type -> FLOAT_TYPE','type',1,'p_type','ajs_parser.py',164),
  ('type -> BOOLEAN','type',1,'p_type','ajs_parser.py',165),
  ('properties -> dot_property','properties',1,'p_properties','ajs_parser.py',171),
  ('properties -> square_property','properties',1,'p_properties','ajs_parser.py',172),
  ('properties -> dot_property properties','properties',2,'p_properties','ajs_parser.py',173),
  ('properties -> square_property properties','properties',2,'p_properties','ajs_parser.py',174),
  ('dot_property -> DOT STRING','dot_property',2,'p_dot_property','ajs_parser.py',180),
  ('square_property -> OPEN_SQUARE QUOTED_STRING CLOSE_SQUARE','square_property',3,'p_square_property','ajs_parser.py',186),
  ('value -> CHARACTER_VALUE','value',1,'p_value','ajs_parser.py',192),
  ('value -> INTEGER','value',1,'p_value','ajs_parser.py',193),
  ('value -> FLOAT','value',1,'p_value','ajs_parser.py',194),
  ('value -> HEX','value',1,'p_value','ajs_parser.py',195),
  ('value -> SCIENTIFIC','value',1,'p_value','ajs_parser.py',196),
  ('value -> OCTAL','value',1,'p_value','ajs_parser.py',197),
  ('value -> BINARY','value',1,'p_value','ajs_parser.py',198),
  ('value -> NULL','value',1,'p_value','ajs_parser.py',199),
  ('value -> TRUE','value',1,'p_value','ajs_parser.py',200),
  ('value -> FALSE','value',1,'p_value','ajs_parser.py',201),
  ('value -> expression_arith','value',1,'p_value','ajs_parser.py',202),
  ('value -> expression_comp','value',1,'p_value','ajs_parser.py',203),
  ('value -> NOT OPEN_PAREN expression_comp CLOSE_PAREN','value',4,'p_value','ajs_parser.py',204),
  ('value -> expression_logic','value',1,'p_value','ajs_parser.py',205),
  ('value -> NOT logic_element','value',2,'p_value','ajs_parser.py',206),
  ('value -> object','value',1,'p_value','ajs_parser.py',207),
  ('value -> STRING properties','value',2,'p_value','ajs_parser.py',208),
  ('value -> STRING','value',1,'p_value','ajs_parser.py',209),
  ('expression -> expression_logic','expression',1,'p_expression','ajs_parser.py',215),
  ('expression -> logic_element','expression',1,'p_expression','ajs_parser.py',216),
  ('expression_logic -> logic_element logic_operator logic_element','expression_logic',3,'p_expression_logic','ajs_parser.py',222),
  ('expression_logic -> logic_element logic_operator logic_element logic_operations','expression_logic',4,'p_expression_logic','ajs_parser.py',223),
  ('logic_operator -> AND','logic_operator',1,'p_logic_operator','ajs_parser.py',229),
  ('logic_operator -> OR','logic_operator',1,'p_logic_operator','ajs_parser.py',230),
  ('logic_operations -> logic_operation','logic_operations',1,'p_logic_operations','ajs_parser.py',235),
  ('logic_operations -> logic_operation logic_operations','logic_operations',2,'p_logic_operations','ajs_parser.py',236),
  ('logic_operation -> logic_operator logic_element','logic_operation',2,'p_logic_operation','ajs_parser.py',242),
  ('expression_comp -> comp_element comp_operator comp_element','expression_comp',3,'p_expression_comp','ajs_parser.py',250),
  ('comp_operator -> EQUAL','comp_operator',1,'p_comp_operator','ajs_parser.py',256),
  ('comp_operator -> GRATER','comp_operator',1,'p_comp_operator','ajs_parser.py',257),
  ('comp_operator -> GRATER_EQUAL','comp_operator',1,'p_comp_operator','ajs_parser.py',258),
  ('comp_operator -> LOWER','comp_operator',1,'p_comp_operator','ajs_parser.py',259),
  ('comp_operator -> LOWER_EQUAL','comp_operator',1,'p_comp_operator','ajs_parser.py',260),
  ('expression_arith -> element operations','expression_arith',2,'p_expression_arith','ajs_parser.py',267),
  ('operations -> operation','operations',1,'p_operations','ajs_parser.py',273),
  ('operations -> operation operations','operations',2,'p_operations','ajs_parser.py',274),
  ('operation -> arithmetic_operator element','operation',2,'p_operation','ajs_parser.py',280),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','ajs_parser.py',287),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','ajs_parser.py',288),
  ('arithmetic_operator -> MULTIPLY','arithmetic_operator',1,'p_arithmetic_operator','ajs_parser.py',289),
  ('arithmetic_operator -> DIVISION','arithmetic_operator',1,'p_arithmetic_operator','ajs_parser.py',290),
  ('element -> INTEGER','element',1,'p_element','ajs_parser.py',297),
  ('element -> FLOAT','element',1,'p_element','ajs_parser.py',298),
  ('element -> HEX','element',1,'p_element','ajs_parser.py',299),
  ('element -> SCIENTIFIC','element',1,'p_element','ajs_parser.py',300),
  ('element -> OCTAL','element',1,'p_element','ajs_parser.py',301),
  ('element -> BINARY','element',1,'p_element','ajs_parser.py',302),
  ('element -> STRING','element',1,'p_element','ajs_parser.py',303),
  ('element -> OPEN_PAREN expression_arith CLOSE_PAREN','element',3,'p_element','ajs_parser.py',304),
  ('element -> STRING properties','element',2,'p_element','ajs_parser.py',305),
  ('element -> CHARACTER_VALUE','element',1,'p_element','ajs_parser.py',306),
  ('comp_element -> INTEGER','comp_element',1,'p_comp_element','ajs_parser.py',312),
  ('comp_element -> FLOAT','comp_element',1,'p_comp_element','ajs_parser.py',313),
  ('comp_element -> HEX','comp_element',1,'p_comp_element','ajs_parser.py',314),
  ('comp_element -> SCIENTIFIC','comp_element',1,'p_comp_element','ajs_parser.py',315),
  ('comp_element -> OCTAL','comp_element',1,'p_comp_element','ajs_parser.py',316),
  ('comp_element -> BINARY','comp_element',1,'p_comp_element','ajs_parser.py',317),
  ('comp_element -> STRING','comp_element',1,'p_comp_element','ajs_parser.py',318),
  ('comp_element -> expression_arith','comp_element',1,'p_comp_element','ajs_parser.py',319),
  ('comp_element -> OPEN_PAREN expression_arith CLOSE_PAREN','comp_element',3,'p_comp_element','ajs_parser.py',320),
  ('comp_element -> STRING properties','comp_element',2,'p_comp_element','ajs_parser.py',321),
  ('comp_element -> CHARACTER_VALUE','comp_element',1,'p_comp_element','ajs_parser.py',322),
  ('logic_element -> TRUE','logic_element',1,'p_logic_element','ajs_parser.py',328),
  ('logic_element -> FALSE','logic_element',1,'p_logic_element','ajs_parser.py',329),
  ('logic_element -> expression_comp','logic_element',1,'p_logic_element','ajs_parser.py',330),
  ('logic_element -> NOT OPEN_PAREN expression_comp CLOSE_PAREN','logic_element',4,'p_logic_element','ajs_parser.py',331),
  ('logic_element -> OPEN_PAREN expression_logic CLOSE_PAREN','logic_element',3,'p_logic_element','ajs_parser.py',332),
  ('logic_element -> STRING','logic_element',1,'p_logic_element','ajs_parser.py',333),
  ('logic_element -> NOT logic_element','logic_element',2,'p_logic_element','ajs_parser.py',334),
]
