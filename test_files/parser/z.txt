
/*
type SquareType = { side: float, color: character };


let mySquare: SquareType = {
  side: 10.,
  color: 'b'
};



let mySquare: SquareType, a;

a = 1;
mySquare: SquareType = {
  side: 10.,
  color: 'b'
};






let b =  1;

let a  = 10;
let b = 100;





let result = div(newCircle.radio, newCircle.cy);

type AnotherCircleType = { cx: float, cy: float, radio: float, color: character };

let newCircle: AnotherCircleType = {
  cx: 'a',
  cy: 10.5,
  radio: 100.5,
  color: 'r',
};

function div(a: float, b: float): int {
    let temp = 0;
    while (a > 0) {
        a = a - b;
        temp = temp + 1;
    }
    return temp;
}
*/





let a = 5;


function par(a: int): boolean {
  // Esta funciÃ³n devuelve true si el numero es par
  let r;
  while (a > 1){
    a = a - 2;
  }
  if (a == 0){
    r = tr;
  }
  else {
    r = fl;
  }
  return r;
}

let par_variable = par(10);
let impar_variable = par(121);
























